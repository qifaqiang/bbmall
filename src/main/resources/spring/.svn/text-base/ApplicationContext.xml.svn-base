<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<import resource="ApplicationContext-service.xml" />
	<import resource="captcha-context.xml" />
	<!--mvc:annotation-driven/ -->
	<context:component-scan
		base-package="com.wxsoft.xyd.*.service.*,com.wxsoft.xyd.*.mapper.*"></context:component-scan>

	<!-- 加载数据库配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>
					classpath:/config/dbconnect.properties
				</value>
			</list>
		</property>
	</bean>

	<!-- c3p0数据源配置 destroy-method="close" -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${mysql.driverClassName}</value>
		</property>
		<property name="url">
			<value>${mysql.database}</value>
		</property>
		<property name="username">
			<value>${mysql.username}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize">
			<value>${mysql.initialPoolSize}</value>
		</property>
		<property name="minIdle">
			<value>${mysql.minPoolSize}</value>
		</property>
		<property name="maxActive">
			<value>${mysql.maxPoolSize}</value>
		</property>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait">
			<value>${mysql.maxIdleTime}</value>
		</property>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis">
			<value>${mysql.timeBetweenEvictionRunsMillis}</value>
		</property>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis">
			<value>${mysql.minEvictableIdleTimeMillis}</value>
		</property>
		<property name="validationQuery">
			<value>SELECT 'x'</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="testOnBorrow">
			<value>false</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/sqlmap-config.xml" />
		<property name="mapperLocations" value="classpath:com/wxsoft/xyd/**/*.xml" />
		<property name="typeAliasesPackage" value="com.wxsoft.xyd" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- 使用Spring的jdbcTemplate处理一手工查询语句 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- Spring iBatis SqlMapClient -->
	<!-- bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="configLocation" 
		value="classpath:/mybatis/sqlmap-config.xml" /> </bean -->

	<!-- 扫描 basePackage下所有的接口，根据对应的mapper.xml为其生成代理类 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="listByProcedure*" propagation="REQUIRED"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(* com.wxsoft.xyd.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>

	<bean
		class="com.wxsoft.framework.listener.InstantiationTracingBeanPostProcessor" />
	<!-- freemarker配置信息 -->
	<!-- bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> 
		<property name="templateLoaderPath" value="/WEB-INF/template/" /> <property 
		name="defaultEncoding" value="utf-8" /> <property name="freemarkerSettings"> 
		<props> <prop key="template_update_delay">0</prop> <prop key="locale">zh_CN</prop> 
		<prop key="default_encoding">UTF-8</prop> <prop key="number_format">0.##########</prop> 
		<prop key="datetime_format">yyyy-MM-dd hh:mm:ss</prop> <prop key="classic_compatible">true</prop> 
		<prop key="template_exception_handler">ignore</prop> </props> </property> 
		</bean -->

	<!-- 配置发送模板bean -->
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="classpath:/freemarkTemplate/" /><!-- 
			模板路径位置 -->
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">1800</prop><!-- 模板更新延时 -->
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>

	<!-- 查找类路径下面的映射器并自动将他们创建成MapperFactoryBean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="com.wxsoft.xyd" />
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
	</bean>

	<bean id="exceptionResolver" class="com.wxsoft.framework.resolver.MyExceptionResolver" />
</beans>
